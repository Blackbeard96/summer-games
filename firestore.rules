rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - allow users to read/write their own documents
    match /users/{userId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == userId || 
         request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net', 'eddymosley9@gmail.com'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
    }
    
    // Users collection - allow scorekeepers to read all users
    match /users/{userId} {
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/userRoles/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/userRoles/$(request.auth.uid)).data.role == 'scorekeeper';
    }
    
    // Students collection - allow users to read/write their own documents
    match /students/{userId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == userId || 
         request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net', 'eddymosley9@gmail.com'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
    }
    
    // Students collection - allow scorekeepers to read all students
    match /students/{userId} {
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/userRoles/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/userRoles/$(request.auth.uid)).data.role == 'scorekeeper';
    }
    
    // Test account access - allow admin access to test accounts
    match /users/test-account-001 {
      allow read, write: if request.auth != null && 
        (request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
    }
    
    match /students/test-account-001 {
      allow read, write: if request.auth != null && 
        (request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
    }
    
    // Challenge submissions - allow users to read/write their own submissions
    match /challengeSubmissions/{submissionId} {
      allow read, write: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
      
      // Allow creation of new submissions
      allow create: if request.auth != null && 
        (request.auth.uid != null ||
         request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
    }
    
    // Chapter classroom mappings - allow admins to manage
    match /chapterClassroomMap/{mappingId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
    }
    
    // Notifications - allow users to read their own notifications
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
      
      // Allow creation of new notifications
      allow create: if request.auth != null && 
        (request.auth.uid != null ||
         request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
    }
    
    // Student notifications subcollection - allow users to read their own notifications, anyone to create
    match /students/{userId}/notifications/{notificationId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == userId || 
         request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net', 'eddymosley9@gmail.com'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
      
      // Allow any authenticated user to create notifications (for battle notifications, etc.)
      allow create: if request.auth != null;
    }
    
    // User roles collection - allow users to read their own role, admins to manage all roles
    match /userRoles/{userId} {
      allow read: if request.auth != null && 
        (request.auth.uid == userId || 
         request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
      allow write: if request.auth != null && 
        (request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
    }
    
    // Classrooms collection - allow admins to manage classrooms
    match /classrooms/{classroomId} {
      allow read: if request.auth != null && 
        (request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net', 'eddymosley9@gmail.com'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
      allow write: if request.auth != null && 
        (request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
    }
    
    // Classrooms collection - allow scorekeepers to read classrooms
    match /classrooms/{classroomId} {
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/userRoles/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/userRoles/$(request.auth.uid)).data.role == 'scorekeeper';
    }
    
    // Badges collection - allow admins to manage badges
    match /badges/{badgeId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
    }
    
    // PP Change Requests collection - allow scorekeepers to create, admins to manage
    match /ppChangeRequests/{requestId} {
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/userRoles/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/userRoles/$(request.auth.uid)).data.role == 'scorekeeper';
      allow read, write: if request.auth != null && 
        (request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net', 'eddymosley9@gmail.com'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
    }
    
    // PP Change Sessions collection - allow scorekeepers to create, admins to manage
    match /ppChangeSessions/{sessionId} {
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/userRoles/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/userRoles/$(request.auth.uid)).data.role == 'scorekeeper';
      allow read, write: if request.auth != null && 
        (request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net', 'eddymosley9@gmail.com'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
    }
    
    // Vaults collection - allow users to read/write their own vault
    match /vaults/{userId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == userId || 
         request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net', 'eddymosley9@gmail.com'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
    }
    
    // Battle Moves collection - allow users to read/write their own moves
    match /battleMoves/{userId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == userId || 
         request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net', 'eddymosley9@gmail.com'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
    }
    
    // Battle Action Cards collection - allow users to read/write their own cards
    match /battleActionCards/{userId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == userId || 
         request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net', 'eddymosley9@gmail.com'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
    }
    
    // Battle Lobbies collection - allow authenticated users to read/write
    match /battleLobbies/{lobbyId} {
      allow read, write: if request.auth != null;
    }
    
    // Manifest Milestones collection - allow authenticated users to read
    match /manifestMilestones/{manifestType} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net', 'eddymosley9@gmail.com'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
    }
    
    // Elemental Milestones collection - allow authenticated users to read
    match /elementalMilestones/{elementalType} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net', 'eddymosley9@gmail.com'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
    }
    
    // Admin Notifications collection - allow authenticated users to create, admins to read/write
    match /adminNotifications/{notificationId} {
      allow create: if request.auth != null;
      allow read, write: if request.auth != null && 
        (request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net', 'eddymosley9@gmail.com'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
    }
    
    // Offline Moves collection - allow authenticated users to create, users to read/write their own moves
    match /offlineMoves/{moveId} {
      allow create: if request.auth != null;
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net', 'eddymosley9@gmail.com'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
    }
    
    // Vault Siege Attacks collection - allow authenticated users to create, users to read their own attacks
    match /vaultSiegeAttacks/{attackId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.attackerId || 
         request.auth.uid == resource.data.targetId ||
         request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net', 'eddymosley9@gmail.com'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
      allow write: if request.auth != null && 
        (request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net', 'eddymosley9@gmail.com'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
    }
    
    // Used Items collection - allow authenticated users to create, users to read their own items, admins to manage all
    match /usedItems/{itemId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net', 'eddymosley9@gmail.com'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
      allow write: if request.auth != null && 
        (request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net', 'eddymosley9@gmail.com'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
    }
    
    // Practice Battles collection - allow authenticated users to create, users to read their own battles, admins to manage all
    match /practiceBattles/{battleId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net', 'eddymosley9@gmail.com'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
      allow write: if request.auth != null && 
        (request.auth.token.email in ['edm21179@gmail.com', 'eddymosley@compscihigh.org', 'admin@mstgames.net', 'eddymosley9@gmail.com'] ||
         request.auth.token.email.matches('.*@mstgames\\.net$') ||
         request.auth.token.email.matches('.*@compscihigh\\.org$'));
    }
    
    // Active PP Boosts collection - allow users to read/write their own boosts
    match /activePPBoosts/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Battle Rooms collection - allow authenticated users to create, participants to read/write
    match /battleRooms/{roomId} {
      allow read: if request.auth != null && (resource.data.hostId == request.auth.uid || request.auth.uid in resource.data.participants);
      allow create: if request.auth != null;
      allow update: if request.auth != null && (resource.data.hostId == request.auth.uid || request.auth.uid in resource.data.participants);
    }
    
    // Default rule - deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}